

.. _sphx_glr_auto_examples_02_preprocessing_plot_fmri_coregistration.py:


Functional and anatomical coregistration
========================================

Standard functional preprocessing and registration of functional image to the
anatomical.



Retrieve data
-------------



.. code-block:: python

    from sammba import data_fetchers

    retest = data_fetchers.fetch_zurich_test_retest(subjects=[0],
                                                    correct_headers=True)







retest contains paths to images and data description



.. code-block:: python

    anat_filename = retest.anat[0]
    func_filename = retest.func[0]
    print(func_filename)





.. rst-class:: sphx-glr-script-out

 Out::

    /home/salma/nilearn_data/zurich_retest/baseline/1366/rsfMRI_corrected.nii.gz


We encapsulate them in an object called `FMRISession`



.. code-block:: python

    from sammba.registration import FMRISession

    animal_session = FMRISession(anat=anat_filename, func=func_filename,
                                 animal_id='1366')







Define the write directory
--------------------------
Note that this directory needs to be empty, to ovoid overwrting conflicts.



.. code-block:: python

    import os

    write_dir = os.path.join(os.getcwd(), 'zurich_fmri')
    if not os.path.exists(write_dir):
        os.makedirs(write_dir)







Functional to anatomical registration
-------------------------------------



.. code-block:: python

    from sammba.registration import coregister_fmri_session

    coregister_fmri_session(animal_session, 1., write_dir, 400,
                            slice_timing=True,
                            prior_rigid_body_registration=True)







Check out the results
---------------------



.. code-block:: python

    from nilearn import plotting, image

    display = plotting.plot_epi(image.mean_img(animal_session.coreg_func_),
                                title='coreg anat edges on top of mean coreg EPI')
    display.add_edges(animal_session.coreg_anat_)
    plotting.show()



.. image:: /auto_examples/02_preprocessing/images/sphx_glr_plot_fmri_coregistration_001.png
    :align: center




**Total running time of the script:** ( 4 minutes  1.254 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_fmri_coregistration.py <plot_fmri_coregistration.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_fmri_coregistration.ipynb <plot_fmri_coregistration.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
