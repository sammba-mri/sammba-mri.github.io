

.. _sphx_glr_auto_examples_03_connectivity_plot_ica.py:


ICA on mouse
============
Independent components analysis on 5 mice.



Retrieve the fMRI data
----------------------



.. code-block:: python

    from sammba import data_fetchers

    retest = data_fetchers.fetch_zurich_test_retest(subjects=range(5),
                                                    correct_headers=True)







We encapsulate data for each mouse through an object called `FMRISession`



.. code-block:: python

    from sammba.registration import FMRISession

    sessions = [FMRISession(anat=anat_filename, func=func_filename)
                for anat_filename, func_filename in zip(retest.anat, retest.func)]







Load the template
-------------------



.. code-block:: python

    dorr = data_fetchers.fetch_atlas_dorr_2008(downsample='100')
    template_filename = dorr.t2







Define the writing directory
----------------------------



.. code-block:: python

    import os

    write_dir = os.path.join(os.getcwd(), 'zurich_ica')
    if not os.path.exists(write_dir):
        os.makedirs(write_dir)







Register to the template
------------------------



.. code-block:: python

    from sammba.registration import fmri_sessions_to_template

    fmri_sessions_to_template(sessions, head_template_filename=dorr.t2,
                              t_r=1., write_dir=write_dir,
                              brain_volume=400,
                              prior_rigid_body_registration=True, caching=True)

    registered_funcs = [sess.registered_func_ for sess in sessions]







Run ICA
-------



.. code-block:: python

    from nilearn.decomposition import CanICA

    canica = CanICA(n_components=30, smoothing_fwhm=.3, n_jobs=-1)
    canica.fit(registered_funcs)







Retrieve the independent components in brain space.



.. code-block:: python

    components_img = canica.masker_.inverse_transform(canica.components_)







Visualize the components
------------------------
We can plot the outline of all components on one figure.



.. code-block:: python

    from nilearn import plotting

    plotting.plot_prob_atlas(components_img,
                             anat_img=dorr.t2,
                             title='All ICA components')



.. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_ica_001.png
    :align: center




**Total running time of the script:** ( 57 minutes  26.191 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ica.py <plot_ica.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ica.ipynb <plot_ica.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
